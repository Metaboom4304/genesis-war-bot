// commands/broadcast.js
const fs = require('fs');
const path = require('path');

const broadcastTypes = {
  default: 'üì¢ –û–±—ä—è–≤–ª–µ–Ω–∏–µ',
  important: '‚ùó –í–∞–∂–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
  tech: 'üõ†Ô∏è –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ',
  info: '‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
  warn: '‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ',
};

module.exports = function setupBroadcast(bot, developerIds) {
  bot.onText(/^\/broadcast (\w+)\s+(.+)/, (msg, match) => {
    const senderId = msg.from.id;
    if (!developerIds.includes(senderId)) return;

    const type = match[1];
    const text = match[2];
    const prefix = broadcastTypes[type] || broadcastTypes.default;
    const finalMessage = `${prefix}\n\n${text}`;

    // —á–∏—Ç–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const usersPath = path.join(__dirname, '../data/users.json');
    let recipients = [];
    try {
      recipients = JSON.parse(fs.readFileSync(usersPath));
    } catch (err) {
      console.error('users.json not found or unreadable');
      return bot.sendMessage(senderId, '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π');
    }

    let sentCount = 0;
    recipients.forEach(chatId => {
      bot.sendMessage(chatId, finalMessage).then(() => sentCount++);
    });

    bot.sendMessage(senderId, `üì§ –†–∞—Å—Å—ã–ª–∫–∞ "${type}" –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ ${recipients.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º`);
  });
};
